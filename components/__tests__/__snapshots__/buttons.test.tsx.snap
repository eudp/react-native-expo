// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Buttons renders correctly when filter is all 1`] = `
<View
  style={
    {
      "alignItems": "flex-end",
      "flex": 2,
      "flexDirection": "row",
      "justifyContent": "center",
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#334FFA",
        "borderRadius": 10,
        "flex": 1,
        "marginRight": 13,
        "opacity": 1,
        "padding": 10,
        "paddingVertical": 20,
      }
    }
  >
    <Text
      style={
        [
          {
            "fontFamily": "Avenir-Regular",
          },
          {
            "color": "#FFFFFF",
            "fontFamily": "Avenir-Black",
          },
        ]
      }
    >
      Ganados
    </Text>
  </View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#334FFA",
        "borderRadius": 10,
        "flex": 1,
        "opacity": 1,
        "padding": 10,
        "paddingVertical": 20,
      }
    }
  >
    <Text
      style={
        [
          {
            "fontFamily": "Avenir-Regular",
          },
          {
            "color": "#FFFFFF",
            "fontFamily": "Avenir-Black",
          },
        ]
      }
    >
      Canjeados
    </Text>
  </View>
</View>
`;

exports[`Buttons renders correctly when filter is not all 1`] = `
<View
  style={
    {
      "alignItems": "flex-end",
      "flex": 2,
      "flexDirection": "row",
      "justifyContent": "center",
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#334FFA",
        "borderRadius": 10,
        "flex": 1,
        "opacity": 1,
        "padding": 10,
        "paddingVertical": 20,
      }
    }
  >
    <Text
      style={
        [
          {
            "fontFamily": "Avenir-Regular",
          },
          {
            "color": "#FFFFFF",
            "fontFamily": "Avenir-Black",
          },
        ]
      }
    >
      Todos
    </Text>
  </View>
</View>
`;
